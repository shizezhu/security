<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szz.security.dao.db.UserDb" >

  <resultMap id="BaseResultMap" type="cn.szz.security.pojo.po.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realname" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <collection property="roleList" column="id" ofType="cn.szz.security.pojo.po.Role" 
    javaType="java.util.List" select="cn.szz.security.dao.db.RoleDb.listByUserId"></collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, username, password, real_name, phone, email, status, add_time, modify_time
  </sql>
  
  <sql id="Base_Where">
  	<if test="params != null">
	    <if test="params.id != null">
	    	and id = #{params.id,jdbcType=BIGINT}
	    </if>
	    <if test="params.username != null">
	    	and username = #{params.username,jdbcType=VARCHAR}
	    </if>
	    <if test="params.password != null">
    		and password = #{params.password,jdbcType=VARCHAR}
    	</if>
	    <if test="params.realname != null">
    		and real_name = #{params.realname,jdbcType=VARCHAR}
    	</if>
	    <if test="params.phone != null">
    		and phone = #{params.phone,jdbcType=VARCHAR}
    	</if>
	    <if test="params.email != null">
    		and email = #{params.email,jdbcType=VARCHAR}
    	</if>
	    <if test="params.status != null">
    		and status = #{params.status,jdbcType=BIT}
    	</if>
    	<if test="params.ids != null and params.ids.size > 0">
	    	and id in 
	    	<foreach collection="params.ids" item="id" open="(" separator="," close=")">
	    		#{id,jdbcType=BIGINT}
	    	</foreach>
		</if>
    </if>
  </sql>

  <sql id="Base_Where_Search">
  	<if test="search != null">
  		and (id like concat('%', #{search,jdbcType=VARCHAR}, '%') or username like concat('%', #{search,jdbctype=VARCHAR}, '%') or realname like concat('%', #{search,jdbctype=VARCHAR}, '%') or phone like concat('%', #{search,jdbctype=VARCHAR}, '%') or email like concat('%', #{search,jdbctype=VARCHAR}, '%'))
   	</if>
  </sql>
  
  <sql id="Base_Order">
	<if test="sort != null and sort != ''">
		order by ${sort}
		<if test="order != null and order != ''">
			${order}
		</if>
	</if>
  </sql>
  
  <sql id="Base_Limit">
  	<if test="firstResult != null and maxResult != null">
		limit ${firstResult}, ${maxResult}
	</if>
  </sql>
  
  <select id="list" resultMap="BaseResultMap" parameterType="cn.szz.security.pojo.dto.MybatisParams">
    select 
    <include refid="Base_Column_List" />
    from user where 1 = 1
    <include refid="Base_Where"/>
    <include refid="Base_Where_Search"/>
    <include refid="Base_Order"/>
    <include refid="Base_Limit"/>
  </select>
  
  <select id="count" resultType="java.lang.Long" parameterType="cn.szz.security.pojo.dto.MybatisParams">
  	select count(*)
    from user where 1 = 1
    <include refid="Base_Where"/>
    <include refid="Base_Where_Search"/>
  </select>
  
  <select id="get" resultMap="BaseResultMap" parameterType="cn.szz.security.pojo.dto.MybatisParams">
    select 
    <include refid="Base_Column_List" />
    from user where 1 = 1
    <include refid="Base_Where"/>
    limit 1
  </select>
  
   <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="del" parameterType="cn.szz.security.pojo.dto.MybatisParams" >
    delete from user
    where 1 = 1
    <include refid="Base_Where"/>
  </delete>
  
  <delete id="delById" parameterType="java.lang.Long">
  	delete from user where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="save" parameterType="cn.szz.security.pojo.po.User" useGeneratedKeys="true" keyProperty="id" >
	insert into user (id, username, password, real_name, phone, email, status, add_time, modify_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{addTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="update" parameterType="cn.szz.security.pojo.po.User" >
	update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>