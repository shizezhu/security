<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szz.security.dao.db.RoleDb" >

  <resultMap id="BaseResultMap" type="cn.szz.security.pojo.po.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="descr" property="descr" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, descr, add_time, modify_time
  </sql>
  
  <sql id="Base_Where">
  	<if test="params != null">
	    <if test="params.id != null">
	    	and id = #{params.id,jdbcType=BIGINT}
	    </if>
	    <if test="params.name != null">
    		and name = #{params.name,jdbcType=VARCHAR}
	    </if>
	    <if test="params.ids != null and params.ids.size > 0">
	    	and id in 
	    	<foreach collection="params.ids" item="id" open="(" separator="," close=")">
	    		#{id,jdbcType=BIGINT}
	    	</foreach>
		</if>
    </if>
  </sql>
  
  <sql id="Base_Where_Search">
  	<if test="search != null">
  		and (id like concat('%', #{search,jdbcType=VARCHAR}, '%') or name like concat('%', #{search,jdbcType=VARCHAR}, '%'))
   	</if>
  </sql>
  
  <sql id="Base_Order">
	<if test="sort != null and sort != ''">
		order by ${sort}
		<if test="order != null and order != ''">
			${order}
		</if>
	</if>
  </sql>
  
  <sql id="Base_Limit">
  	<if test="firstResult != null and maxResult != null">
		limit ${firstResult}, ${maxResult}
	</if>
  </sql>
  
  <select id="list" resultMap="BaseResultMap" parameterType="cn.szz.security.pojo.dto.MybatisParams">
    select 
    <include refid="Base_Column_List" />
    from role where 1 = 1
    <include refid="Base_Where"/>
    <include refid="Base_Where_Search"/>
    <include refid="Base_Order"/>
    <include refid="Base_Limit"/>
  </select>
  
  <select id="count" resultType="java.lang.Long" parameterType="cn.szz.security.pojo.dto.MybatisParams">
  	select count(*)
    from role where 1 = 1
    <include refid="Base_Where"/>
    <include refid="Base_Where_Search"/>
  </select>
  
  <select id="get" resultMap="BaseResultMap" parameterType="cn.szz.security.pojo.dto.MybatisParams">
    select 
    <include refid="Base_Column_List" />
    from role where 1 = 1
    <include refid="Base_Where"/>
    limit 1
  </select>
  
   <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="del" parameterType="cn.szz.security.pojo.dto.MybatisParams" >
    delete from Role
    where 1 = 1
    <include refid="Base_Where"/>
  </delete>
  
  <delete id="delById" parameterType="java.lang.Long">
  	delete from role where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="save" parameterType="cn.szz.security.pojo.po.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into role (name, descr, add_time, modify_time)
    values (#{name,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}, 
    #{addTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="update" parameterType="cn.szz.security.pojo.po.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="listByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	select 
  	r.id as id, r.name as name, r.descr as descr, r.add_time as add_time, r.modify_time as modify_time
  	from user_role as ur join role as r on ur.role_id = r.id where ur.user_id = #{userId,jdbcType=BIGINT}
  </select>
  
</mapper>